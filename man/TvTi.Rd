% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/TvTi.R
\name{TvTi}
\alias{TvTi}
\title{plot transitions/transversions}
\usage{
TvTi(x, y = NULL, type = "Proportion", label_x_axis = TRUE,
  x_axis_text_angle = 45, palette = c("#D53E4F", "#FC8D59", "#FEE08B",
  "#E6F598", "#99D594", "#3288BD"), file_type = "MAF", tvti.layers = NULL,
  expec.layers = NULL, sort = "none", dataOut = FALSE)
}
\arguments{
\item{x}{Object of class data frame containing columns 'sample', reference',
'variant'}

\item{y}{named vector containing expected transition/transversion proportions
with names "A->C or T->G (TV)", "A->G or T->C (TI)", "A->T or T->A (TV)",
 "G->A or C->T (TI)", "G->C or C->G (TV)", "G->T or C->A (TV)" or a data
frame with column names "Prop", "trans_tranv" and levels of trans_tranv
 matching "A->C or T->G (TV)", "A->G or T->C (TI)", "A->T or T->A (TV)",
 "G->A or C->T (TI)", "G->C or C->G (TV)", "G->T or C->A (TV)"}

\item{type}{Object of class character specifying whether to plot the
Proportion or Frequency, one of "Proportion", "Frequency"}

\item{label_x_axis}{boolean specifying wheter to label x axis}

\item{x_axis_text_angle}{Integer specifying the angle of labels on the x_axis}

\item{palette}{Character vector of length 6 specifying colors for each
trans/tranv type}

\item{file_type}{Character string specifying the format the input is in,
one of 'MAF', 'MGI'}

\item{tvti.layers}{Additional ggplot2 layers to add to the main panel plot}

\item{expec.layers}{Additional ggplot2 layers to add to the expected
values plot}

\item{sort}{character specifying one of "sample", "tvti", "none" for
plotting samples based on a sample name, transition/transversion freq, or no
order}

\item{dataOut}{Boolean Specifying whether to output the data to be passed
instead of plotting it}
}
\value{
ggplot2 object or data frame if dataOut is set to TRUE
}
\description{
Given a data frame with columns reference, variant, and sample construct a
transition/transversion plot
}
\examples{
TvTi(brcaMAF, type='Frequency',
palette=c("#77C55D", "#A461B4", "#C1524B", "#93B5BB", "#4F433F", "#BFA753"),
x_axis_text_angle=60)
}

